<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Join Our Discord Server</title>
    <link rel="icon" type="image/jpeg" href="https://u.cubeupload.com/Oatmeal3ds123/lecatt.jpg">
    <meta name="viewport" content="width=1200, initial-scale=1">
    <meta name="description" content="Join Our Discord Server!">
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            width: 100vw;
        }
        body {
            background: #23272a;
            color: #fff;
            font-family: 'Segoe UI', Arial, sans-serif;
            min-height: 100vh;
            width: 100vw;
            overflow-x: hidden;
            position: relative;
        }
        .page-fade-border {
            pointer-events: none;
            position: fixed;
            left: 0; top: 0; width: 100vw; height: 100vh;
            z-index: 1000;
        }
        .page-fade-border:before {
            content: "";
            position: absolute;
            left:0;top:0;width:100vw;height:100vh;
            background: radial-gradient(ellipse at center, rgba(30,32,34,0) 68%, rgba(30,32,34,0.95) 100%);
            pointer-events: none;
            z-index: 1000;
            display: block;
        }
        .container {
            margin: 40px auto 0 auto;
            background: #2c2f33;
            padding: 40px 48px 40px 48px;
            border-radius: 18px;
            box-shadow:
                0 0 0 5px #7289da,
                0 12px 48px rgba(0,0,0,0.40);
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            overflow: visible;
            max-width: 1080px;
            width: 92vw;
            min-width: 800px;
            z-index: 10;
        }
        .bubbles {
            pointer-events: none;
            position: absolute;
            top: 0; left: 0; width: 100%; height: 100%;
            overflow: hidden;
            z-index: 1;
        }
        .cat-fly-bg {
            position: absolute;
            left: 0;
            top: 0;
            width: 170px;
            height: auto;
            z-index: 2;
            pointer-events: none;
            filter: drop-shadow(0 12px 36px #23272a77);
            opacity: 1;
            user-select: none;
            will-change: transform;
        }
        .bubble {
            position: absolute;
            border-radius: 50%;
            opacity: 0.16;
            animation: bubble-float 12s linear infinite;
            background: radial-gradient(circle at 30% 30%, #7289da 0%, #5865F2 80%, transparent 100%);
            z-index: 1;
        }
        .bubble.b1 { width: 90px; height: 90px; left: 8%;  top: 90%; animation-duration: 14s; animation-delay: 0s;}
        .bubble.b2 { width: 70px; height: 70px; left: 80%; top: 92%; animation-duration: 11s; animation-delay: 3s;}
        .bubble.b3 { width: 56px; height: 56px; left: 24%; top: 95%; animation-duration: 17s; animation-delay: 1.8s;}
        .bubble.b4 { width: 34px; height: 34px; left: 75%; top: 97%; animation-duration: 13s; animation-delay: 2.4s;}
        .bubble.b5 { width: 110px; height: 110px; left: 60%; top: 93%; animation-duration: 15s; animation-delay: 4.2s;}
        .bubble.b6 { width: 74px; height: 74px; left: 42%; top: 98%; animation-duration: 10s; animation-delay: 6s;}
        @keyframes bubble-float {
            0%   { transform: translateY(0) scale(1); opacity: 0.16;}
            15%  { opacity: 0.23;}
            85%  { opacity: 0.23;}
            100% { transform: translateY(-1000px) scale(1.18); opacity: 0.12;}
        }
        .main-card,
        .join-now-card {
            background: rgba(35, 39, 42, 0.87); /* slightly transparent */
            border-radius: 15px;
            box-shadow: 0 4px 32px #1117, 0 1.5px 8px #1114;
            margin: 22px 0;
            padding: 34px 38px;
            width: 100%;
            max-width: 950px;
            display: flex;
            flex-direction: column;
            align-items: center;
            z-index: 3;
            position: relative;
        }
        .join-now-card {
            max-width: 500px;
            padding: 24px 32px 36px 32px;
            margin: 35px auto 0 auto;
        }
        .main-card h1 {
            font-size: 2.7em;
            margin: 0 0 18px 0;
            text-align: center;
            letter-spacing: 2px;
            background: linear-gradient(90deg, #7289da 20%, #5865F2 80%);
            background-clip: text;
            -webkit-background-clip: text;
            color: transparent;
            -webkit-text-fill-color: transparent;
            animation: text-glow 2.5s infinite alternate;
        }
        @keyframes text-glow {
            0% { text-shadow: 0 0 10px #7289da55, 0 0 40px #5865F288; }
            100% { text-shadow: 0 0 36px #7289da88, 0 0 72px #5865F2aa; }
        }
        .main-card .server-description {
            background: rgba(32,34,37,0.82);
            color: #e3e6eb;
            font-size: 1.23em;
            line-height: 1.7;
            box-shadow: 0 2px 28px #7289da22;
            padding: 18px 34px 18px 34px;
            border-radius: 11px;
            margin: 0 0 30px 0;
            max-width: 850px;
            animation: desc-fade-in 1.3s 0.8s cubic-bezier(.3,1.3,.4,1) both;
            text-align: center;
        }
        @keyframes desc-fade-in {
            from { opacity: 0; transform: translateY(24px);}
            to { opacity: 1; transform: translateY(0);}
        }
        .main-card .server-info {
            margin-bottom: 20px;
            text-align: center;
            opacity: 0;
            transform: translateY(30px) scale(0.96);
            animation: info-fade-in 1.2s 0.3s cubic-bezier(.25,1.5,.5,1) forwards;
        }
        @keyframes info-fade-in {
            0% { opacity: 0; transform: translateY(30px) scale(0.96);}
            100% { opacity: 1; transform: translateY(0) scale(1);}
        }
        .main-card .server-info img {
            width: 120px;
            height: 120px;
            border-radius: 22%;
            margin-bottom: 14px;
            box-shadow: 0 2px 26px #5865f288;
            filter: drop-shadow(0 0 24px #5865f2cc);
            animation: icon-pop 1.3s cubic-bezier(.4,2,.4,1) both;
        }
        @keyframes icon-pop {
            0% { transform: scale(0.7) rotate(-10deg); opacity: 0; }
            70% { transform: scale(1.1) rotate(8deg); opacity: 1; }
            100% { transform: scale(1) rotate(0deg); opacity: 1; }
        }
        .section-title {
            color: #7289da;
            font-size: 1.4em;
            font-weight: 700;
            margin: 30px 0 16px 0;
            letter-spacing: 1.3px;
            text-align: center;
            width: 100%;
            max-width: 1100px;
        }
        .channels-list, .members-list {
            display: flex;
            flex-wrap: wrap;
            gap: 18px 28px;
            margin-bottom: 16px;
            margin-top: 8px;
            justify-content: center;
        }
        .channel-card {
            background: rgba(24,26,27,0.77);
            border-radius: 10px;
            padding: 14px 30px;
            font-size: 1.18em;
            color: #fff;
            box-shadow: 0 2px 12px #5865f222;
            min-width: 155px;
            flex: 0 1 auto;
            opacity: 0;
            transform: scale(0.98) translateY(20px);
            animation: channel-in 0.7s cubic-bezier(.3,1.3,.4,1) forwards;
            text-align: center;
        }
        .channel-card .ch-type {
            font-size: 0.95em;
            color: #b9bbbe;
            margin-left: 10px;
        }
        .channel-card:nth-child(n) { animation-delay: calc(.07s * var(--i)); }
        @keyframes channel-in {
            0% { opacity: 0; transform: scale(0.94) translateY(16px);}
            100% { opacity: 1; transform: scale(1) translateY(0);}
        }
        .member-card {
            background: rgba(24,26,27,0.77);
            border-radius: 14px;
            padding: 20px 28px 18px 28px;
            min-width: 180px;
            min-height: 130px;
            box-shadow: 0 2px 28px #5865f255, 0 1.5px 8px #1114;
            display: flex;
            flex-direction: column;
            align-items: center;
            transition: transform 0.18s cubic-bezier(.4,2,.4,1), box-shadow 0.18s;
            position: relative;
            cursor: pointer;
            opacity: 0;
            animation: member-pop 0.8s cubic-bezier(.25,1.5,.5,1) forwards;
            text-align: center;
        }
        .member-card:hover {
            transform: scale(1.09) rotate(-2deg);
            box-shadow: 0 4px 38px #7289da88, 0 2px 26px #23272a66;
            z-index: 11;
        }
        .member-card img {
            width: 66px;
            height: 66px;
            border-radius: 50%;
            box-shadow: 0 0 12px #5865f277;
            margin-bottom: 9px;
            border: 2.5px solid #5865F2;
            background: #23272a;
            animation: avatar-spin 1.4s cubic-bezier(.4,2,.4,1) both;
        }
        @keyframes avatar-spin {
            0% { transform: scale(0.7) rotate(-90deg); opacity: 0; }
            70% { transform: scale(1.1) rotate(18deg); opacity: 1; }
            100% { transform: scale(1) rotate(0deg); opacity: 1; }
        }
        .member-name {
            font-weight: 600;
            color: #fff;
            margin-top: 2px;
            font-size: 1.17em;
            text-shadow: 0 0 8px #5865f266;
            position: relative;
        }
        .member-status {
            font-size: 0.98em;
            color: #b9bbbe;
            margin-top: 7px;
            font-weight: 500;
        }
        .owner-card {
            border: 2.5px solid #fffbe6;
            box-shadow: 0 0 38px #ffe066bb, 0 2px 30px #fffbe666, 0 0 24px 5px #f9f87188;
            background: linear-gradient(135deg, #fffbe688 0%, #fffad1 80%, #f0e768 100%);
            position: relative;
            z-index: 10;
            animation: owner-card-glow 2.2s infinite alternate;
        }
        @keyframes owner-card-glow {
            0% { box-shadow: 0 0 38px #ffe066bb, 0 2px 30px #fffbe666, 0 0 24px 5px #f9f87188; }
            100% { box-shadow: 0 0 58px #fffbe6, 0 7px 46px #fffbba88, 0 0 56px 10px #f9f871cc; }
        }
        .owner-badge {
            display: inline-block;
            background: linear-gradient(90deg, #fbff00 0%, #facc15 100%);
            color: #23272a;
            font-weight: bold;
            border-radius: 7px;
            padding: 3px 14px 3px 14px;
            margin-left: 10px;
            font-size: 1.05em;
            box-shadow: 0 1px 12px #facc1555;
            letter-spacing: 0.6px;
            animation: owner-badge-pop 1.2s cubic-bezier(.4,2,.4,1) both;
            border: 1.5px solid #fffbe6;
            vertical-align: middle;
            text-shadow: 0 2px 10px #fff7b855;
            position: relative;
            z-index: 10;
        }
        @keyframes owner-badge-pop {
            0% { transform: scale(0.7); opacity: 0; }
            80% { transform: scale(1.12); opacity: 1; }
            100% { transform: scale(1); opacity: 1; }
        }
        .owner-holo {
            background: linear-gradient(90deg, #fffbe6 0%, #ffe066 22%, #facc15 46%, #b5ffd9 71%, #fffbe6 100%);
            background-size: 220% auto;
            color: transparent;
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: holo-glow 6s linear infinite;
            font-weight: 900;
            letter-spacing: 2.5px;
            text-shadow: 0 2px 18px #fffbe6aa, 0 0 32px #fffbe6cc;
            filter: brightness(1.2);
            font-size: 1.18em;
        }
        @keyframes holo-glow {
            to { background-position: 220% center; }
        }
        .owner-sparkle {
            position: absolute;
            pointer-events: none;
            left: 0; top: 0; width: 100%; height: 100%;
            overflow: visible;
            z-index: 99;
            animation: sparkle-appear 0.8s both;
        }
        @keyframes sparkle-appear {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .sparkle {
            position: absolute;
            width: 22px;
            height: 22px;
            background: radial-gradient(ellipse at center, #fffbe6 0%, #ffe066 65%, transparent 100%);
            border-radius: 50%;
            opacity: 0.93;
            pointer-events: none;
            animation: sparkle-float 2.8s linear infinite;
        }
        .sparkle.s1 { left: 6%; top: 13%; animation-delay: 0.1s;}
        .sparkle.s2 { left: 85%; top: 14%; animation-delay: 0.7s;}
        .sparkle.s3 { left: 58%; top: 74%; animation-delay: 1.6s;}
        .sparkle.s4 { left: 18%; top: 86%; animation-delay: 2.1s;}
        @keyframes sparkle-float {
            0% { transform: scale(0.78) translateY(0px); opacity: 0.96;}
            50% { transform: scale(1.16) translateY(-10px); opacity: 1;}
            100% { transform: scale(0.8) translateY(0px); opacity: 0.7;}
        }
        .instant-invite, .instant-invite:visited {
            background: linear-gradient(90deg, #5865F2 60%, #7289DA 100%);
            color: #fff;
            padding: 18px 48px;
            border-radius: 11px;
            margin-top: 16px;
            text-decoration: none;
            font-weight: bold;
            font-size: 1.3em;
            letter-spacing: 1px;
            transition: background 0.15s, box-shadow 0.18s, transform 0.12s;
            box-shadow: 0 0 0 #7289da55;
            animation: invite-pulse 2.6s 1s infinite;
            border: none;
            cursor: pointer;
            display: inline-block;
            text-align: center;
        }
        .instant-invite:hover {
            background: linear-gradient(90deg, #7289DA 60%, #5865F2 100%);
            box-shadow: 0 0 20px #7289da88;
            transform: scale(1.08);
        }
        @keyframes invite-pulse {
            0% { box-shadow: 0 0 0px #7289da55; }
            60% { box-shadow: 0 0 32px #7289da99; }
            100% { box-shadow: 0 0 0px #7289da55; }
        }
        #desktop-only-message {
            display: none;
        }
        @media (max-width: 900px), (max-device-width: 900px) {
            body, html {
                background: #23272a;
                min-height: 100vh;
            }
            .container, .page-fade-border {
                display: none !important;
            }
            #desktop-only-message {
                display: flex !important;
                position: fixed;
                left: 0; top: 0; width: 100vw; height: 100vh;
                align-items: center;
                justify-content: center;
                color: #fff;
                background: #23272a;
                font-size: 2em;
                text-align: center;
                padding: 60px;
                z-index: 2000;
            }
        }
    </style>
</head>
<body>
<div class="page-fade-border"></div>
<div id="desktop-only-message">
    This page is only available on desktop devices.<br>
    Please visit from a larger screen.
</div>
<div class="container" id="main-container">
    <div class="bubbles">
        <div class="bubble b1"></div>
        <div class="bubble b2"></div>
        <div class="bubble b3"></div>
        <div class="bubble b4"></div>
        <div class="bubble b5"></div>
        <div class="bubble b6"></div>
        <img class="cat-fly-bg" id="cat-fly-bg" src="https://u.cubeupload.com/Oatmeal3ds123/DUMcat1.png" alt="Flying Cat">
    </div>
    <div class="main-card">
        <h1>Join Our Discord Server!</h1>
        <div class="server-info" id="server-info">
            <div style="color:#888;">Loading server info...</div>
        </div>
        <div class="server-description">
            a simple server i made just so you can have fun! some of my games or early access games will be added and also the server is a ghost town rn it doesnt have many ppl on it... <br><br>
            <strong>btw boosts are appreciated and i'm a little bit active on the server!</strong><br><br>
            before you go, this was made to have fun, not do bad things and btw this server is monitored 24/7 by some bots so don't break rules!
        </div>
    </div>
    <div class="main-card">
        <div class="section-title" id="channels-title">Channels</div>
        <div class="channels-list" id="channels-list"></div>
    </div>
    <div class="main-card">
        <div class="section-title" id="members-title">Online Members</div>
        <div class="members-list" id="members-list"></div>
    </div>
    <div class="join-now-card">
        <div class="section-title" id="invite-title">Join Now!</div>
        <div id="server-invite">
            <a class="instant-invite" id="fallback-invite" href="https://discord.gg/JE6FkvJvDs" target="_blank" rel="noopener">Join Now!</a>
        </div>
    </div>
</div>
<script>
function updateFadeMask() {
    var container = document.getElementById('main-container');
    if (!container) return;
    var rect = container.getBoundingClientRect();
    var cx = rect.left + rect.width / 2;
    var cy = rect.top + rect.height / 2;
    var rx = rect.width / 2 + 30;
    var ry = rect.height / 2 + 30;
    var mask = `radial-gradient(ellipse ${rx}px ${ry}px at ${cx}px ${cy}px, white 70%, transparent 100%)`;
    var fade = document.querySelector('.page-fade-border');
    if (fade) {
        fade.style.webkitMaskImage = mask;
        fade.style.maskImage = mask;
    }
}
window.addEventListener('resize', updateFadeMask);
window.addEventListener('DOMContentLoaded', updateFadeMask);
setTimeout(updateFadeMask, 400);

(function animateCatWave() {
    const cat = document.getElementById("cat-fly-bg");
    if (!cat) return;
    let start = null;
    const windowW = () => window.innerWidth || 1800;
    const baseY = 120, ampY = 170;
    function getContainerWidth() {
        const container = document.querySelector('.container');
        return container ? container.offsetWidth : windowW();
    }
    const duration = 5;
    function frame(ts) {
        if (!start) start = ts;
        let t = ((ts - start) / 1000) % duration;
        let percent = t / duration;
        const leftStart = -190;
        const leftEnd = getContainerWidth() + 110;
        const x = leftStart + (leftEnd - leftStart) * percent;
        const wave = percent * 2 * Math.PI;
        const scrollY = window.scrollY || window.pageYOffset || 0;
        const y = baseY + ampY * Math.sin(wave) + scrollY * 0.28;
        const angle = Math.cos(wave) * 35;
        cat.style.transform = `translate(${x}px, ${y}px) rotate(${angle}deg)`;
        cat.style.top = "0";
        cat.style.left = "0";
        requestAnimationFrame(frame);
    }
    requestAnimationFrame(frame);
})();

function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}
const filterOut = [
    "beemo", "cat", "disboard", "double counter", "turtle", "carl bot", "make it a quote"
];
function isFiltered(name) {
    if (!name) return false;
    const lower = name.toLowerCase();
    return filterOut.some(substr => lower.includes(substr));
}
function channelTypeName(type) {
    switch (type) {
        case 0: return "Text";
        case 2: return "Voice";
        case 4: return "Category";
        case 5: return "Announcement";
        case 13: return "Stage";
        default: return "Other";
    }
}
const OWNER_USERNAME = "oatmeal3ds";

fetch('https://discord.com/api/guilds/1288276550655152198/widget.json')
    .then(resp => resp.ok ? resp.json() : Promise.reject(resp))
    .then(data => {
        // Server icon and name
        const infoDiv = document.getElementById('server-info');
        infoDiv.innerHTML = `
        <img src="${escapeHtml(data.icon_url || 'https://u.cubeupload.com/Oatmeal3ds123/lecatt.jpg')}" alt="Server Icon">
        <div class="info-label">${escapeHtml(data.name || 'Server')}</div>
        <div style="color:#b9bbbe;font-size:1.15em;margin-top:2px;">${data.presence_count || 0} online</div>
        `;

        // Channels
        const channelsList = document.getElementById('channels-list');
        channelsList.innerHTML = "";
        if (Array.isArray(data.channels)) {
            const typeOrder = {4: 0, 0: 1, 2: 2, 5: 3, 13: 4};
            const sortedChannels = data.channels.slice().sort((a, b) => {
                const ta = typeOrder[a.type] ?? 99, tb = typeOrder[b.type] ?? 99;
                if (ta !== tb) return ta - tb;
                return (a.position ?? 0) - (b.position ?? 0);
            });
            sortedChannels.forEach((ch, i) => {
                channelsList.innerHTML += `
                    <div class="channel-card" style="--i:${i}">
                        #${escapeHtml(ch.name)}
                        <span class="ch-type">(${channelTypeName(ch.type)})</span>
                    </div>
                `;
            });
        } else {
            channelsList.innerHTML = `<div style="color:#888;">No channel info available.</div>`;
        }

        // Members (prioritize owner, limit to 6)
        const membersList = document.getElementById('members-list');
        membersList.innerHTML = "";
        let showMembers = (data.members || []).filter(m => !isFiltered(m.username));
        if (showMembers.length) {
            // Prioritize owner, then sort by status and name
            const statusOrder = { online: 0, idle: 1, dnd: 2, offline: 3 };
            let ownerIdx = showMembers.findIndex(m => m.username && m.username.toLowerCase() === OWNER_USERNAME.toLowerCase());
            let prioritized = [];
            if (ownerIdx !== -1) {
                prioritized.push(showMembers[ownerIdx]);
                showMembers.splice(ownerIdx, 1);
            }
            // Sort remaining by status, then name
            showMembers.sort((a, b) => {
                const sa = statusOrder[a.status] ?? 5, sb = statusOrder[b.status] ?? 5;
                if (sa !== sb) return sa - sb;
                return (a.username || "").localeCompare(b.username || "");
            });
            prioritized = prioritized.concat(showMembers);
            // Only show up to 6 (after prioritizing owner)
            prioritized = prioritized.slice(0, 6);
            prioritized.forEach((member, i) => {
                let statusColor = "#43b581";
                if(member.status==="idle") statusColor = "#faa61a";
                else if(member.status==="dnd") statusColor = "#f04747";
                else if(member.status==="offline") statusColor = "#747f8d";
                const statusDot = `<span style="display:inline-block;width:9px;height:9px;border-radius:50%;background:${statusColor};margin-right:4px;margin-bottom:-1.5px;box-shadow:0 0 4px ${statusColor}77;"></span>`;
                const isOwner = member.username && member.username.toLowerCase() === OWNER_USERNAME.toLowerCase();
                const ownerBadge = isOwner ? `<span class="owner-badge">OWNER</span>` : "";
                const memberName = isOwner
                    ? `<span class="owner-holo">${escapeHtml(member.username)}</span>`
                    : escapeHtml(member.username);
                const ownerSparkles = isOwner
                    ? `<div class="owner-sparkle">
                        <span class="sparkle s1"></span>
                        <span class="sparkle s2"></span>
                        <span class="sparkle s3"></span>
                        <span class="sparkle s4"></span>
                    </div>`
                    : "";
                membersList.innerHTML += `
                    <div class="member-card${isOwner ? " owner-card" : ""}" style="--i:${i}; position:relative;">
                        ${ownerSparkles}
                        <img src="${member.avatar_url}" alt="Avatar of ${escapeHtml(member.username)}">
                        <div class="member-name">${memberName}${member.bot ? ' 🤖' : ''} ${ownerBadge}</div>
                        <div class="member-status">${statusDot}${escapeHtml(member.status)}</div>
                    </div>
                `;
            });
            setTimeout(() => {
                document.querySelectorAll('.member-card').forEach((el, idx) => {
                    setTimeout(() => { el.style.opacity = "1"; }, 80 * idx + 200);
                });
            }, 300);
        } else {
            membersList.innerHTML = `<div style="color:#888;">No online members found.</div>`;
        }

        // Join Now button
        const inviteDiv = document.getElementById('server-invite');
        inviteDiv.innerHTML = "";
        if (data.instant_invite) {
            inviteDiv.innerHTML = `<a class="instant-invite" href="${data.instant_invite}" target="_blank" rel="noopener">Join Now!</a>`;
        } else {
            inviteDiv.innerHTML = `<a class="instant-invite" href="https://discord.gg/JE6FkvJvDs" target="_blank" rel="noopener">Join Now!</a>`;
        }
    })
    .catch(() => {
        document.getElementById('channels-list').innerHTML = `<div style="color:#888;">Unable to load channel info.</div>`;
        document.getElementById('members-list').innerHTML = `<div style="color:#888;">Unable to load member info.</div>`;
        document.getElementById('server-invite').innerHTML = `<a class="instant-invite" href="https://discord.gg/JE6FkvJvDs" target="_blank" rel="noopener">Join Now!</a>`;
    });
</script>
</body>
</html>